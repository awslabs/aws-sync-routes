{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AWS Sync Routes \u00b6 Synchronizes the specified route from the main/default route table to all custom route tables in the VPC . The primary use case is for VMware Cloud on AWS (VMC) software-defined datacenter (SDDC) managed routes, but this could also be used as-is for any scenario where syncing AWS VPC routes to custom route tables is desired. This solution should only cost a few dollars per month to operate- depending on the number of routes managed and the number of API calls. Please see the pricing guides for further details: AWS Lambda , AWS API Gateway , Amazon SNS , Amazon S3 , Amazon CloudWatch Logs , & CloudFormation . This is also an infrastructure as code solution, meaning that it should only require a few commands to deploy once the prerequisites are installed & configured, and was designed so that it should not require much attention thereafter. Once deployed, the endpoint generally takes 1-3 seconds to execute when called, and is idempotent , so changes will only be implemented once when the specified route either does not exist in one or more custom route tables or the next hop value changes. Routes will not be programmatically removed by this solution. One customer success story to date is that this solution was used in us-east-1 to synchronize 26 production routes across 4 custom route tables (104 concurrent route synchronizations) with a 5 second polling interval. In testing, all route targets updated successfully within 4 seconds. This met the customer's requirement of completing all route synchronizations prior to timeout of a mission critical application at 15 seconds, and allowed them to complete a critical maintenance window. Please test thoroughly. Architecture \u00b6 Architecture diagram \u00b6 Infrastructure as code diagram \u00b6 Prerequisites \u00b6 NodeJS AWS CLI Configured AWS CLI profile AWS Amplify CLI toolchain NOTE: Interoperability between the AWS Amplify CLI and AWS CLI Multi-Factor Authentication (MFA) , as well as assume role with MFA , have been validated in testing per request. Please also see this AWS blog post for a few great examples. For Windows users \u00b6 Windows Subsystem for Linux Getting Started \u00b6 Run amplify env add , which will: Map your AWS CLI profile to a new AWS Amplify environment NOTE: The default AWS region specified for your AWS CLI profile will be used, such as us-east-1 . Update the value (temporarily or otherwise) if you want the resources deployed elsewhere. Deploy the root CloudFormation stack , which includes the following default resources for an AWS Amplify CLI managed project: S3 deployment bucket CloudFormation root stack IAM AuthRole IAM UnauthRole Create: ./amplify/team-provider-info.json : Specifies the names and ARNs of the resources in the root stack for your environment. IMPORTANT : Do not submit pull requests with your ./amplify/team-provider-info.json file. Again, it contains information about your environment's resources. This file should be committed in your private repo and was intentionally excluded from ./.gitignore . If you updated the default region for your AWS CLI profile and want to change it back, you can do so once this file exists because all of the other resources will be deployed to the region specified in this file. ./amplify/backend/amplify-meta.json : Compiled from ./amplify/backend/backend-config.json and ./amplify/team-provider-info.json . Specifies: The managed backend categories Their dependencies Deployment information ./amplify/#current-cloud-backend/ : Directory containing the compiled version of the environment. ./src/aws-exports.js : Covered in the next step. The example below specifies an environment name of dev , an editor of None , and the default AWS CLI profile. Adjust these for your use case. $ amplify env add Note: It is recommended to run this command from the root of your app directory ? Enter a name for the environment dev ? Choose your default editor: Sublime Text Visual Studio Code Atom Editor IDEA 14 CE Vim (via Terminal, Mac OS only) Emacs (via Terminal, Mac OS only) \u276f None Using default provider awscloudformation For more information on AWS Profiles, see: https://docs.aws.amazon.com/cli/latest/userguide/cli-multiple-profiles.html ? Do you want to use an AWS profile? (Y/n) ? Please choose the profile you want to use (Use arrow keys) \u276f default \u283c Initializing project in the cloud... Review the API request throttling parameters: burstLimit & rateLimit , in ./amplify/backend/api/awssyncroutes/parameters.json and update if necessary. Run amplify push to deploy the rest of the resources. $ amplify push Current Environment: dev | Category | Resource name | Operation | Provider plugin | | -------- | ------------- | --------- | ----------------- | | Function | awssyncroutes | Create | awscloudformation | | Api | awssyncroutes | Create | awscloudformation | ? Are you sure you want to continue? (Y/n) * This will create: * `./src/aws-exports.js`: One place where you can find the root URL of the new API Gateway. * `./amplify/backend/awscloudformation/nested-cloudformation-stack.yml`: Nested CloudFormation stack specification. * Also, the `S3Bucket` will be automatically populated in `./amplify/backend/function/awssyncroutes/awssyncroutes-cloudformation-template.json`. * **IMPORTANT**: Do not submit pull requests with ***your*** S3 deployment bucket. Once complete, retrieve the API key . One way to do this: aws apigateway get-api-keys : Copy the id value for the next command. aws apigateway get-api-key --include-value --api-key <id> : Copy the value value. Then subscribe to the SNS topic to opt-in for change notifications. Now, you are ready to test the API endpoint. One way to do this: curl --data '{\"destination-cidr-block\":\"<destination cidr block>\", \"dry-run\": true}' --header \"X-API-Key: <api key>\" --header \"Content-Type: application/json\" --request PATCH https://<api gateway id>.execute-api.<region>.amazonaws.com/<stage name>/vpcs/<vpc id>/route-tables/<route table id> Request requirements \u00b6 Requests will only be accepted if the specified destination CIDR block: Is not the default local route . Is not a propagated route . Has an ENI target. Is in an active state in the main route table. Usage \u00b6 There is only one API endpoint with two path parameters: /vpcs/<vpc id>/route-tables/<route table id> with a HTTP PATCH request method . NOTE: This implementation does not follow all of the RFC5789 specifications for a HTTP PATCH method- it does not use a PATCH document and it is idempotent. Path parameter Required Description Example 1 Example 2 <vpc id> true ID of the VPC . vpc-01234567 vpc-0123456789abcdef0 <route table id> true ID of the VPC's main route table . rtb-01234567 rtb-0123456789abcdef0 The request body schema has one required property: destination-cidr-block , and one optional property: dry-run . Property name Required Description Example 1 Example 2 destination-cidr-block true The IPv4 destination CIDR block for the route. 192.168.0.0/24 172.30.0.0/16 dry-run false Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation ; otherwise, it is UnauthorizedOperation . true false Example \u00b6 cURL \u00b6 curl --data '{\"destination-cidr-block\":\"<destination cidr block>\", \"dry-run\": true}' --header \"X-API-Key: <api key>\" --header \"Content-Type: application/json\" --request PATCH https://<api gateway id>.execute-api.<region>.amazonaws.com/<stage name>/vpcs/<vpc id>/route-tables/<route table id> PowerShell Invoke-RestMethod cmdlet \u00b6 Invoke-RestMethod -Method 'Patch' -Uri 'https://<api gateway id>.execute-api.<region>.amazonaws.com/<stage name>/vpcs/<vpc id>/route-tables/<route table id>' -Headers @{ 'Content-Type' = 'application/json' ; 'X-API-Key' = '<api key>' } -Body '{\"destination-cidr-block\":\"172.30.0.0/16\", \"dry-run\": false}' Client script \u00b6 A bash script has been added, which can be used to call the API endpoint asynchronously for a comma-delimited list of destination CIDR blocks in an loop. One way to implement this would be to call the script in a screen session so that the script can run without maintaining a SSH session and administrators can disconnect/reconnect as needed. ./scripts/aws-sync-routes-client.sh -i $api_gateway_id -k $api_key -r 'us-east-1' -c '172.30.0.0/16, 172.31.0.0/16' -s 5 -t rtb-01234567 -v vpc-01234567 ./scripts/aws-sync-routes-client.sh --help Troubleshooting \u00b6 Too Many Requests \u00b6 If you start receiving Too Many Requests error messages, this means that the configured rate & burst limits for your API Gateway instance are set too low for the frequency in which you are polling. Adjust the burstLimit & rateLimit values in parameters.json , then run amplify push to deploy the changes, and try again. Of note, the rate & burst limits are only configured in the API token usage plan as described in the API Gateway CloudFormation template , not the API Gateway deployment stage. Throttling could be configured in both locations, but configuring this in both locations is unnecessary and the current configuration makes it easy to use additional API tokens if so desired. Request Limit Exceeded \u00b6 If you are syncing a batch of routes and start receiving Request Limit Exceeded error messages, this means that the requests are being throttled due to the number of requests in this region in this account within a set period of time. First try decreasing the frequency of API calls. If that is unteneble, please open an AWS Support ticket explaining the business case and request an increase to the limits for the following: EC2 describe route tables 1 call per request (sustained) EC2 create route 1 call per custom route table per request where the route exists in the main route table, but not in the custom route table (burst) In dry-run mode, this action will be called for every request since changes will not be executed, resulting in a higher likelihood of throttling EC2 replace route 1 call per custom route table per request where the route exists in both the main & custom route table, but have different next hop values (burst) In dry-run mode, this action will be called for every request since changes will not be executed, resulting in a higher likelihood of throttling Project tree \u00b6 . \u251c\u2500\u2500 .github/ \u2502 \u2514\u2500\u2500 PULL_REQUEST_TEMPLATE.md \u251c\u2500\u2500 .vscode/ \u2502 \u2514\u2500\u2500 settings.json \u251c\u2500\u2500 amplify/ \u2502 \u251c\u2500\u2500 #current-cloud-backend/ \u2502 \u251c\u2500\u2500 .config/ \u2502 \u2502 \u251c\u2500\u2500 local-aws-info.json \u2502 \u2502 \u251c\u2500\u2500 local-env-info.json \u2502 \u2502 \u2514\u2500\u2500 project-config.json \u2502 \u251c\u2500\u2500 backend/ \u2502 \u2502 \u251c\u2500\u2500 api/ \u2502 \u2502 \u2502 \u2514\u2500\u2500 awssyncroutes/ \u2502 \u2502 \u2502 \u251c\u2500\u2500 api-params.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 awssyncroutes-cloudformation-template.json \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.json \u2502 \u2502 \u251c\u2500\u2500 awscloudformation/ \u2502 \u2502 \u2502 \u2514\u2500\u2500 nested-cloudformation-stack.yml \u2502 \u2502 \u251c\u2500\u2500 function/ \u2502 \u2502 \u2502 \u2514\u2500\u2500 awssyncroutes/ \u2502 \u2502 \u2502 \u251c\u2500\u2500 dist/ \u2502 \u2502 \u2502 \u251c\u2500\u2500 src/ \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 node_modules/ \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 app.js \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 index.js \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 package-lock.json \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 package.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 amplify.state \u2502 \u2502 \u2502 \u251c\u2500\u2500 awssyncroutes-cloudformation-template.json \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.json \u2502 \u2502 \u251c\u2500\u2500 amplify-meta.json \u2502 \u2502 \u2514\u2500\u2500 backend-config.json \u2502 \u2514\u2500\u2500 team-provider-info.json \u2502 \u2514\u2500\u2500 README.md \u251c\u2500\u2500 docs/ \u2502 \u251c\u2500\u2500 about/ \u2502 \u2502 \u251c\u2500\u2500 contributing.md -> ../../CONTRIBUTING.md \u2502 \u2502 \u2514\u2500\u2500 license.md -> ../../LICENSE \u2502 \u251c\u2500\u2500 adr/ \u2502 \u2502 \u251c\u2500\u2500 0001-record-architecture-decisions.md \u2502 \u2502 \u251c\u2500\u2500 0002-aws-amplify-cli-toolchain.md \u2502 \u2502 \u251c\u2500\u2500 0003-http-patch-method.md \u2502 \u2502 \u251c\u2500\u2500 0004-api-key.md \u2502 \u2502 \u251c\u2500\u2500 0005-uri.md \u2502 \u2502 \u2514\u2500\u2500 0006-specificity.md \u2502 \u251c\u2500\u2500 stylesheets/ \u2502 \u2502 \u2514\u2500\u2500 extra.css \u2502 \u251c\u2500\u2500 Architecture.png -> ../Architecture.png \u2502 \u251c\u2500\u2500 InfrastructureAsCode.png -> ../InfrastructureAsCode.png \u2502 \u2514\u2500\u2500 index.md -> ../README.md* \u251c\u2500\u2500 material.bak/ \u2502 \u251c\u2500\u2500 assets/ \u2502 \u2502 \u2514\u2500\u2500 stylesheets/ \u2502 \u2502 \u251c\u2500\u2500 application-palette.css \u2502 \u2502 \u2514\u2500\u2500 application.css \u2502 \u251c\u2500\u2500 partials/ \u2502 \u2502 \u2514\u2500\u2500 palette.html \u2502 \u2514\u2500\u2500 main.html \u251c\u2500\u2500 scripts/ \u2502 \u2514\u2500\u2500 aws-sync-routes-client.sh* \u251c\u2500\u2500 src/ \u2502 \u2514\u2500\u2500 aws-exports.js \u251c\u2500\u2500 .adr-dir \u251c\u2500\u2500 .editorconfig \u251c\u2500\u2500 .eslintrc.js \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 .markdownlint.yml \u251c\u2500\u2500 Architecture.png \u251c\u2500\u2500 CODE_OF_CONDUCT.md \u251c\u2500\u2500 CONTRIBUTING.md \u251c\u2500\u2500 InfrastructureAsCode.png \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 NOTICE \u251c\u2500\u2500 README.md* \u2514\u2500\u2500 mkdocs.yml The project tree was generated with the following command: tree -aFL 6 --dirsfirst --noreport -I \".git|site|*-latest-build.zip\" License \u00b6 This library is licensed under the Apache 2.0 License .","title":"Getting Started"},{"location":"#aws-sync-routes","text":"Synchronizes the specified route from the main/default route table to all custom route tables in the VPC . The primary use case is for VMware Cloud on AWS (VMC) software-defined datacenter (SDDC) managed routes, but this could also be used as-is for any scenario where syncing AWS VPC routes to custom route tables is desired. This solution should only cost a few dollars per month to operate- depending on the number of routes managed and the number of API calls. Please see the pricing guides for further details: AWS Lambda , AWS API Gateway , Amazon SNS , Amazon S3 , Amazon CloudWatch Logs , & CloudFormation . This is also an infrastructure as code solution, meaning that it should only require a few commands to deploy once the prerequisites are installed & configured, and was designed so that it should not require much attention thereafter. Once deployed, the endpoint generally takes 1-3 seconds to execute when called, and is idempotent , so changes will only be implemented once when the specified route either does not exist in one or more custom route tables or the next hop value changes. Routes will not be programmatically removed by this solution. One customer success story to date is that this solution was used in us-east-1 to synchronize 26 production routes across 4 custom route tables (104 concurrent route synchronizations) with a 5 second polling interval. In testing, all route targets updated successfully within 4 seconds. This met the customer's requirement of completing all route synchronizations prior to timeout of a mission critical application at 15 seconds, and allowed them to complete a critical maintenance window. Please test thoroughly.","title":"AWS Sync Routes"},{"location":"#architecture","text":"","title":"Architecture"},{"location":"#architecture-diagram","text":"","title":"Architecture diagram"},{"location":"#infrastructure-as-code-diagram","text":"","title":"Infrastructure as code diagram"},{"location":"#prerequisites","text":"NodeJS AWS CLI Configured AWS CLI profile AWS Amplify CLI toolchain NOTE: Interoperability between the AWS Amplify CLI and AWS CLI Multi-Factor Authentication (MFA) , as well as assume role with MFA , have been validated in testing per request. Please also see this AWS blog post for a few great examples.","title":"Prerequisites"},{"location":"#for-windows-users","text":"Windows Subsystem for Linux","title":"For Windows users"},{"location":"#getting-started","text":"Run amplify env add , which will: Map your AWS CLI profile to a new AWS Amplify environment NOTE: The default AWS region specified for your AWS CLI profile will be used, such as us-east-1 . Update the value (temporarily or otherwise) if you want the resources deployed elsewhere. Deploy the root CloudFormation stack , which includes the following default resources for an AWS Amplify CLI managed project: S3 deployment bucket CloudFormation root stack IAM AuthRole IAM UnauthRole Create: ./amplify/team-provider-info.json : Specifies the names and ARNs of the resources in the root stack for your environment. IMPORTANT : Do not submit pull requests with your ./amplify/team-provider-info.json file. Again, it contains information about your environment's resources. This file should be committed in your private repo and was intentionally excluded from ./.gitignore . If you updated the default region for your AWS CLI profile and want to change it back, you can do so once this file exists because all of the other resources will be deployed to the region specified in this file. ./amplify/backend/amplify-meta.json : Compiled from ./amplify/backend/backend-config.json and ./amplify/team-provider-info.json . Specifies: The managed backend categories Their dependencies Deployment information ./amplify/#current-cloud-backend/ : Directory containing the compiled version of the environment. ./src/aws-exports.js : Covered in the next step. The example below specifies an environment name of dev , an editor of None , and the default AWS CLI profile. Adjust these for your use case. $ amplify env add Note: It is recommended to run this command from the root of your app directory ? Enter a name for the environment dev ? Choose your default editor: Sublime Text Visual Studio Code Atom Editor IDEA 14 CE Vim (via Terminal, Mac OS only) Emacs (via Terminal, Mac OS only) \u276f None Using default provider awscloudformation For more information on AWS Profiles, see: https://docs.aws.amazon.com/cli/latest/userguide/cli-multiple-profiles.html ? Do you want to use an AWS profile? (Y/n) ? Please choose the profile you want to use (Use arrow keys) \u276f default \u283c Initializing project in the cloud... Review the API request throttling parameters: burstLimit & rateLimit , in ./amplify/backend/api/awssyncroutes/parameters.json and update if necessary. Run amplify push to deploy the rest of the resources. $ amplify push Current Environment: dev | Category | Resource name | Operation | Provider plugin | | -------- | ------------- | --------- | ----------------- | | Function | awssyncroutes | Create | awscloudformation | | Api | awssyncroutes | Create | awscloudformation | ? Are you sure you want to continue? (Y/n) * This will create: * `./src/aws-exports.js`: One place where you can find the root URL of the new API Gateway. * `./amplify/backend/awscloudformation/nested-cloudformation-stack.yml`: Nested CloudFormation stack specification. * Also, the `S3Bucket` will be automatically populated in `./amplify/backend/function/awssyncroutes/awssyncroutes-cloudformation-template.json`. * **IMPORTANT**: Do not submit pull requests with ***your*** S3 deployment bucket. Once complete, retrieve the API key . One way to do this: aws apigateway get-api-keys : Copy the id value for the next command. aws apigateway get-api-key --include-value --api-key <id> : Copy the value value. Then subscribe to the SNS topic to opt-in for change notifications. Now, you are ready to test the API endpoint. One way to do this: curl --data '{\"destination-cidr-block\":\"<destination cidr block>\", \"dry-run\": true}' --header \"X-API-Key: <api key>\" --header \"Content-Type: application/json\" --request PATCH https://<api gateway id>.execute-api.<region>.amazonaws.com/<stage name>/vpcs/<vpc id>/route-tables/<route table id>","title":"Getting Started"},{"location":"#request-requirements","text":"Requests will only be accepted if the specified destination CIDR block: Is not the default local route . Is not a propagated route . Has an ENI target. Is in an active state in the main route table.","title":"Request requirements"},{"location":"#usage","text":"There is only one API endpoint with two path parameters: /vpcs/<vpc id>/route-tables/<route table id> with a HTTP PATCH request method . NOTE: This implementation does not follow all of the RFC5789 specifications for a HTTP PATCH method- it does not use a PATCH document and it is idempotent. Path parameter Required Description Example 1 Example 2 <vpc id> true ID of the VPC . vpc-01234567 vpc-0123456789abcdef0 <route table id> true ID of the VPC's main route table . rtb-01234567 rtb-0123456789abcdef0 The request body schema has one required property: destination-cidr-block , and one optional property: dry-run . Property name Required Description Example 1 Example 2 destination-cidr-block true The IPv4 destination CIDR block for the route. 192.168.0.0/24 172.30.0.0/16 dry-run false Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation ; otherwise, it is UnauthorizedOperation . true false","title":"Usage"},{"location":"#example","text":"","title":"Example"},{"location":"#curl","text":"curl --data '{\"destination-cidr-block\":\"<destination cidr block>\", \"dry-run\": true}' --header \"X-API-Key: <api key>\" --header \"Content-Type: application/json\" --request PATCH https://<api gateway id>.execute-api.<region>.amazonaws.com/<stage name>/vpcs/<vpc id>/route-tables/<route table id>","title":"cURL"},{"location":"#powershell-invoke-restmethod-cmdlet","text":"Invoke-RestMethod -Method 'Patch' -Uri 'https://<api gateway id>.execute-api.<region>.amazonaws.com/<stage name>/vpcs/<vpc id>/route-tables/<route table id>' -Headers @{ 'Content-Type' = 'application/json' ; 'X-API-Key' = '<api key>' } -Body '{\"destination-cidr-block\":\"172.30.0.0/16\", \"dry-run\": false}'","title":"PowerShell Invoke-RestMethod cmdlet"},{"location":"#client-script","text":"A bash script has been added, which can be used to call the API endpoint asynchronously for a comma-delimited list of destination CIDR blocks in an loop. One way to implement this would be to call the script in a screen session so that the script can run without maintaining a SSH session and administrators can disconnect/reconnect as needed. ./scripts/aws-sync-routes-client.sh -i $api_gateway_id -k $api_key -r 'us-east-1' -c '172.30.0.0/16, 172.31.0.0/16' -s 5 -t rtb-01234567 -v vpc-01234567 ./scripts/aws-sync-routes-client.sh --help","title":"Client script"},{"location":"#troubleshooting","text":"","title":"Troubleshooting"},{"location":"#too-many-requests","text":"If you start receiving Too Many Requests error messages, this means that the configured rate & burst limits for your API Gateway instance are set too low for the frequency in which you are polling. Adjust the burstLimit & rateLimit values in parameters.json , then run amplify push to deploy the changes, and try again. Of note, the rate & burst limits are only configured in the API token usage plan as described in the API Gateway CloudFormation template , not the API Gateway deployment stage. Throttling could be configured in both locations, but configuring this in both locations is unnecessary and the current configuration makes it easy to use additional API tokens if so desired.","title":"Too Many Requests"},{"location":"#request-limit-exceeded","text":"If you are syncing a batch of routes and start receiving Request Limit Exceeded error messages, this means that the requests are being throttled due to the number of requests in this region in this account within a set period of time. First try decreasing the frequency of API calls. If that is unteneble, please open an AWS Support ticket explaining the business case and request an increase to the limits for the following: EC2 describe route tables 1 call per request (sustained) EC2 create route 1 call per custom route table per request where the route exists in the main route table, but not in the custom route table (burst) In dry-run mode, this action will be called for every request since changes will not be executed, resulting in a higher likelihood of throttling EC2 replace route 1 call per custom route table per request where the route exists in both the main & custom route table, but have different next hop values (burst) In dry-run mode, this action will be called for every request since changes will not be executed, resulting in a higher likelihood of throttling","title":"Request Limit Exceeded"},{"location":"#project-tree","text":". \u251c\u2500\u2500 .github/ \u2502 \u2514\u2500\u2500 PULL_REQUEST_TEMPLATE.md \u251c\u2500\u2500 .vscode/ \u2502 \u2514\u2500\u2500 settings.json \u251c\u2500\u2500 amplify/ \u2502 \u251c\u2500\u2500 #current-cloud-backend/ \u2502 \u251c\u2500\u2500 .config/ \u2502 \u2502 \u251c\u2500\u2500 local-aws-info.json \u2502 \u2502 \u251c\u2500\u2500 local-env-info.json \u2502 \u2502 \u2514\u2500\u2500 project-config.json \u2502 \u251c\u2500\u2500 backend/ \u2502 \u2502 \u251c\u2500\u2500 api/ \u2502 \u2502 \u2502 \u2514\u2500\u2500 awssyncroutes/ \u2502 \u2502 \u2502 \u251c\u2500\u2500 api-params.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 awssyncroutes-cloudformation-template.json \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.json \u2502 \u2502 \u251c\u2500\u2500 awscloudformation/ \u2502 \u2502 \u2502 \u2514\u2500\u2500 nested-cloudformation-stack.yml \u2502 \u2502 \u251c\u2500\u2500 function/ \u2502 \u2502 \u2502 \u2514\u2500\u2500 awssyncroutes/ \u2502 \u2502 \u2502 \u251c\u2500\u2500 dist/ \u2502 \u2502 \u2502 \u251c\u2500\u2500 src/ \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 node_modules/ \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 app.js \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 index.js \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 package-lock.json \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 package.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 amplify.state \u2502 \u2502 \u2502 \u251c\u2500\u2500 awssyncroutes-cloudformation-template.json \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.json \u2502 \u2502 \u251c\u2500\u2500 amplify-meta.json \u2502 \u2502 \u2514\u2500\u2500 backend-config.json \u2502 \u2514\u2500\u2500 team-provider-info.json \u2502 \u2514\u2500\u2500 README.md \u251c\u2500\u2500 docs/ \u2502 \u251c\u2500\u2500 about/ \u2502 \u2502 \u251c\u2500\u2500 contributing.md -> ../../CONTRIBUTING.md \u2502 \u2502 \u2514\u2500\u2500 license.md -> ../../LICENSE \u2502 \u251c\u2500\u2500 adr/ \u2502 \u2502 \u251c\u2500\u2500 0001-record-architecture-decisions.md \u2502 \u2502 \u251c\u2500\u2500 0002-aws-amplify-cli-toolchain.md \u2502 \u2502 \u251c\u2500\u2500 0003-http-patch-method.md \u2502 \u2502 \u251c\u2500\u2500 0004-api-key.md \u2502 \u2502 \u251c\u2500\u2500 0005-uri.md \u2502 \u2502 \u2514\u2500\u2500 0006-specificity.md \u2502 \u251c\u2500\u2500 stylesheets/ \u2502 \u2502 \u2514\u2500\u2500 extra.css \u2502 \u251c\u2500\u2500 Architecture.png -> ../Architecture.png \u2502 \u251c\u2500\u2500 InfrastructureAsCode.png -> ../InfrastructureAsCode.png \u2502 \u2514\u2500\u2500 index.md -> ../README.md* \u251c\u2500\u2500 material.bak/ \u2502 \u251c\u2500\u2500 assets/ \u2502 \u2502 \u2514\u2500\u2500 stylesheets/ \u2502 \u2502 \u251c\u2500\u2500 application-palette.css \u2502 \u2502 \u2514\u2500\u2500 application.css \u2502 \u251c\u2500\u2500 partials/ \u2502 \u2502 \u2514\u2500\u2500 palette.html \u2502 \u2514\u2500\u2500 main.html \u251c\u2500\u2500 scripts/ \u2502 \u2514\u2500\u2500 aws-sync-routes-client.sh* \u251c\u2500\u2500 src/ \u2502 \u2514\u2500\u2500 aws-exports.js \u251c\u2500\u2500 .adr-dir \u251c\u2500\u2500 .editorconfig \u251c\u2500\u2500 .eslintrc.js \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 .markdownlint.yml \u251c\u2500\u2500 Architecture.png \u251c\u2500\u2500 CODE_OF_CONDUCT.md \u251c\u2500\u2500 CONTRIBUTING.md \u251c\u2500\u2500 InfrastructureAsCode.png \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 NOTICE \u251c\u2500\u2500 README.md* \u2514\u2500\u2500 mkdocs.yml The project tree was generated with the following command: tree -aFL 6 --dirsfirst --noreport -I \".git|site|*-latest-build.zip\"","title":"Project tree"},{"location":"#license","text":"This library is licensed under the Apache 2.0 License .","title":"License"},{"location":"about/contributing/","text":"Contributing Guidelines \u00b6 Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution. Reporting Bugs/Feature Requests \u00b6 We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment Contributing via Pull Requests \u00b6 Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request . Finding contributions to work on \u00b6 Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start. Code of Conduct \u00b6 This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments. Security issue notifications \u00b6 If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue. Licensing \u00b6 See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Contributing Guidelines"},{"location":"about/contributing/#contributing-guidelines","text":"Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution.","title":"Contributing Guidelines"},{"location":"about/contributing/#reporting-bugsfeature-requests","text":"We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment","title":"Reporting Bugs/Feature Requests"},{"location":"about/contributing/#contributing-via-pull-requests","text":"Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request .","title":"Contributing via Pull Requests"},{"location":"about/contributing/#finding-contributions-to-work-on","text":"Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.","title":"Finding contributions to work on"},{"location":"about/contributing/#code-of-conduct","text":"This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments.","title":"Code of Conduct"},{"location":"about/contributing/#security-issue-notifications","text":"If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue.","title":"Security issue notifications"},{"location":"about/contributing/#licensing","text":"See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Licensing"},{"location":"about/license/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and \u00a9 You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.","title":"License"},{"location":"adr/0001-record-architecture-decisions/","text":"1. Record architecture decisions \u00b6 Date: 2019-05-21 Status \u00b6 Accepted Context \u00b6 We need to record the architectural decisions made on this project. Decision \u00b6 We will use Architecture Decision Records, as described by Michael Nygard in this article Consequences \u00b6 See Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's adr-tools .","title":"Record architecture decisions"},{"location":"adr/0001-record-architecture-decisions/#1-record-architecture-decisions","text":"Date: 2019-05-21","title":"1. Record architecture decisions"},{"location":"adr/0001-record-architecture-decisions/#status","text":"Accepted","title":"Status"},{"location":"adr/0001-record-architecture-decisions/#context","text":"We need to record the architectural decisions made on this project.","title":"Context"},{"location":"adr/0001-record-architecture-decisions/#decision","text":"We will use Architecture Decision Records, as described by Michael Nygard in this article","title":"Decision"},{"location":"adr/0001-record-architecture-decisions/#consequences","text":"See Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's adr-tools .","title":"Consequences"},{"location":"adr/0002-aws-amplify-cli-toolchain/","text":"2. AWS Amplify CLI toolchain \u00b6 Date: 2019-05-21 Status \u00b6 Accepted Context \u00b6 The requested functionality was an API endpoint that would synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event. All resources should be managed programmatically for an optimal possible user experience. Decision \u00b6 The AWS Amplify CLI toolchain will be used for programmatically creating, updating, and destroying project resources. The endpoint will be defined in an AWS API Gateway, and the synchronization functionality will be defined in a Lambda function. Consequences \u00b6 End users will need the AWS CLI, NodeJS 8.11+, and the aws-amplify/cli package installed. Detailed instructions will be required.","title":"AWS Amplify CLI toolchain"},{"location":"adr/0002-aws-amplify-cli-toolchain/#2-aws-amplify-cli-toolchain","text":"Date: 2019-05-21","title":"2. AWS Amplify CLI toolchain"},{"location":"adr/0002-aws-amplify-cli-toolchain/#status","text":"Accepted","title":"Status"},{"location":"adr/0002-aws-amplify-cli-toolchain/#context","text":"The requested functionality was an API endpoint that would synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event. All resources should be managed programmatically for an optimal possible user experience.","title":"Context"},{"location":"adr/0002-aws-amplify-cli-toolchain/#decision","text":"The AWS Amplify CLI toolchain will be used for programmatically creating, updating, and destroying project resources. The endpoint will be defined in an AWS API Gateway, and the synchronization functionality will be defined in a Lambda function.","title":"Decision"},{"location":"adr/0002-aws-amplify-cli-toolchain/#consequences","text":"End users will need the AWS CLI, NodeJS 8.11+, and the aws-amplify/cli package installed. Detailed instructions will be required.","title":"Consequences"},{"location":"adr/0003-http-patch-method/","text":"3. HTTP PATCH method \u00b6 Date: 2019-05-21 Status \u00b6 Accepted Context \u00b6 The requested functionality was to synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event, which would have limited information available to construct the request. Of the available HTTP methods, there isn't a perfect fit for this use case. PUT & PATCH were generally recommended for similar scenarios. Decision \u00b6 The HTTP PATCH method will be used. Consequences \u00b6 This implementation will not follow all of the RFC5789 specifications for a HTTP PATCH method- it does not use a PATCH document and it is idempotent.","title":"HTTP PATCH method"},{"location":"adr/0003-http-patch-method/#3-http-patch-method","text":"Date: 2019-05-21","title":"3. HTTP PATCH method"},{"location":"adr/0003-http-patch-method/#status","text":"Accepted","title":"Status"},{"location":"adr/0003-http-patch-method/#context","text":"The requested functionality was to synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event, which would have limited information available to construct the request. Of the available HTTP methods, there isn't a perfect fit for this use case. PUT & PATCH were generally recommended for similar scenarios.","title":"Context"},{"location":"adr/0003-http-patch-method/#decision","text":"The HTTP PATCH method will be used.","title":"Decision"},{"location":"adr/0003-http-patch-method/#consequences","text":"This implementation will not follow all of the RFC5789 specifications for a HTTP PATCH method- it does not use a PATCH document and it is idempotent.","title":"Consequences"},{"location":"adr/0004-api-key/","text":"4. API key \u00b6 Date: 2019-05-24 Status \u00b6 Accepted Context \u00b6 The requested functionality was to synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event. Access to the API endpoint should be restricted since it can modify, custom route tables, but needs to be very simplistic and either accepts or rejects the call on the first request given the nature of the trigger. Optimally, the Lambda proxy function should not be called if the user does not present the proper information to minimize costs. Decision \u00b6 API Gateway API keys will be used to limit access given the constraints. Consequences \u00b6 The end user must have the API key value to successfully call the endpoint.","title":"API Key"},{"location":"adr/0004-api-key/#4-api-key","text":"Date: 2019-05-24","title":"4. API key"},{"location":"adr/0004-api-key/#status","text":"Accepted","title":"Status"},{"location":"adr/0004-api-key/#context","text":"The requested functionality was to synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event. Access to the API endpoint should be restricted since it can modify, custom route tables, but needs to be very simplistic and either accepts or rejects the call on the first request given the nature of the trigger. Optimally, the Lambda proxy function should not be called if the user does not present the proper information to minimize costs.","title":"Context"},{"location":"adr/0004-api-key/#decision","text":"API Gateway API keys will be used to limit access given the constraints.","title":"Decision"},{"location":"adr/0004-api-key/#consequences","text":"The end user must have the API key value to successfully call the endpoint.","title":"Consequences"},{"location":"adr/0005-uri/","text":"5. URI \u00b6 Date: 2019-05-27 Status \u00b6 Accepted Context \u00b6 The requested functionality was to synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event, which would have limited information available to construct the request. There isn't an obvious fit for this in the official REST API URI specifications. Decision \u00b6 The /vpcs/{vpcId}/route-tables/{routeTableId} URI will be used. {vpcId} is the VPC ID. {routeTableId} is the main route table ID Consequences \u00b6 End users must know the VPC ID and the main route table ID to construct the URI.","title":"URI"},{"location":"adr/0005-uri/#5-uri","text":"Date: 2019-05-27","title":"5. URI"},{"location":"adr/0005-uri/#status","text":"Accepted","title":"Status"},{"location":"adr/0005-uri/#context","text":"The requested functionality was to synchronize a specified route (either add or replace) from the main route table to the custom route tables, triggered from a log event, which would have limited information available to construct the request. There isn't an obvious fit for this in the official REST API URI specifications.","title":"Context"},{"location":"adr/0005-uri/#decision","text":"The /vpcs/{vpcId}/route-tables/{routeTableId} URI will be used. {vpcId} is the VPC ID. {routeTableId} is the main route table ID","title":"Decision"},{"location":"adr/0005-uri/#consequences","text":"End users must know the VPC ID and the main route table ID to construct the URI.","title":"Consequences"},{"location":"adr/0006-specificity/","text":"6. Specificity \u00b6 Date: 2019-07-23 Status \u00b6 Accepted Context \u00b6 Feature requests for both summary routes and dynamic route discovery have been proposed so that new routes are automatically discovered and synchronized in order to reduce the risk of new routes being missed. Decision \u00b6 Programmatically making changes to a production routing table is serious business that has the potential to cause network outages. Only specified routes will be synchronized to prevent unintentional changes. Consequences \u00b6 End users must update their request configuration when they add new routes that they want to sync or remove routes that should no longer be synced.","title":"Specificity"},{"location":"adr/0006-specificity/#6-specificity","text":"Date: 2019-07-23","title":"6. Specificity"},{"location":"adr/0006-specificity/#status","text":"Accepted","title":"Status"},{"location":"adr/0006-specificity/#context","text":"Feature requests for both summary routes and dynamic route discovery have been proposed so that new routes are automatically discovered and synchronized in order to reduce the risk of new routes being missed.","title":"Context"},{"location":"adr/0006-specificity/#decision","text":"Programmatically making changes to a production routing table is serious business that has the potential to cause network outages. Only specified routes will be synchronized to prevent unintentional changes.","title":"Decision"},{"location":"adr/0006-specificity/#consequences","text":"End users must update their request configuration when they add new routes that they want to sync or remove routes that should no longer be synced.","title":"Consequences"}]}